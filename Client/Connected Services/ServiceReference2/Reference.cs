//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/EventManagementSystem")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvCusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EvDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvVenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VenueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvCusId {
            get {
                return this.EvCusIdField;
            }
            set {
                if ((this.EvCusIdField.Equals(value) != true)) {
                    this.EvCusIdField = value;
                    this.RaisePropertyChanged("EvCusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvCustName {
            get {
                return this.EvCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EvCustNameField, value) != true)) {
                    this.EvCustNameField = value;
                    this.RaisePropertyChanged("EvCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EvDate {
            get {
                return this.EvDateField;
            }
            set {
                if ((this.EvDateField.Equals(value) != true)) {
                    this.EvDateField = value;
                    this.RaisePropertyChanged("EvDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvDuration {
            get {
                return this.EvDurationField;
            }
            set {
                if ((this.EvDurationField.Equals(value) != true)) {
                    this.EvDurationField = value;
                    this.RaisePropertyChanged("EvDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvId {
            get {
                return this.EvIdField;
            }
            set {
                if ((this.EvIdField.Equals(value) != true)) {
                    this.EvIdField = value;
                    this.RaisePropertyChanged("EvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvName {
            get {
                return this.EvNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EvNameField, value) != true)) {
                    this.EvNameField = value;
                    this.RaisePropertyChanged("EvName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvStatus {
            get {
                return this.EvStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EvStatusField, value) != true)) {
                    this.EvStatusField = value;
                    this.RaisePropertyChanged("EvStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvVenue {
            get {
                return this.EvVenueField;
            }
            set {
                if ((object.ReferenceEquals(this.EvVenueField, value) != true)) {
                    this.EvVenueField = value;
                    this.RaisePropertyChanged("EvVenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VenueId {
            get {
                return this.VenueIdField;
            }
            set {
                if ((this.VenueIdField.Equals(value) != true)) {
                    this.VenueIdField = value;
                    this.RaisePropertyChanged("VenueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IEventService")]
    public interface IEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/AddEvent", ReplyAction="http://tempuri.org/IEventService/AddEventResponse")]
        void AddEvent(Client.ServiceReference2.Event eventDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/AddEvent", ReplyAction="http://tempuri.org/IEventService/AddEventResponse")]
        System.Threading.Tasks.Task AddEventAsync(Client.ServiceReference2.Event eventDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/UpdateEvent", ReplyAction="http://tempuri.org/IEventService/UpdateEventResponse")]
        void UpdateEvent(Client.ServiceReference2.Event eventDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/UpdateEvent", ReplyAction="http://tempuri.org/IEventService/UpdateEventResponse")]
        System.Threading.Tasks.Task UpdateEventAsync(Client.ServiceReference2.Event eventDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/DeleteEvent", ReplyAction="http://tempuri.org/IEventService/DeleteEventResponse")]
        void DeleteEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/DeleteEvent", ReplyAction="http://tempuri.org/IEventService/DeleteEventResponse")]
        System.Threading.Tasks.Task DeleteEventAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetAllEvents", ReplyAction="http://tempuri.org/IEventService/GetAllEventsResponse")]
        Client.ServiceReference2.Event[] GetAllEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetAllEvents", ReplyAction="http://tempuri.org/IEventService/GetAllEventsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference2.Event[]> GetAllEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceChannel : Client.ServiceReference2.IEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference2.IEventService>, Client.ServiceReference2.IEventService {
        
        public EventServiceClient() {
        }
        
        public EventServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddEvent(Client.ServiceReference2.Event eventDetails) {
            base.Channel.AddEvent(eventDetails);
        }
        
        public System.Threading.Tasks.Task AddEventAsync(Client.ServiceReference2.Event eventDetails) {
            return base.Channel.AddEventAsync(eventDetails);
        }
        
        public void UpdateEvent(Client.ServiceReference2.Event eventDetails) {
            base.Channel.UpdateEvent(eventDetails);
        }
        
        public System.Threading.Tasks.Task UpdateEventAsync(Client.ServiceReference2.Event eventDetails) {
            return base.Channel.UpdateEventAsync(eventDetails);
        }
        
        public void DeleteEvent(int eventId) {
            base.Channel.DeleteEvent(eventId);
        }
        
        public System.Threading.Tasks.Task DeleteEventAsync(int eventId) {
            return base.Channel.DeleteEventAsync(eventId);
        }
        
        public Client.ServiceReference2.Event[] GetAllEvents() {
            return base.Channel.GetAllEvents();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference2.Event[]> GetAllEventsAsync() {
            return base.Channel.GetAllEventsAsync();
        }
    }
}
