//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference4 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Venue", Namespace="http://schemas.datacontract.org/2004/07/EventManagementSystem")]
    [System.SerializableAttribute()]
    public partial class Venue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VAddress {
            get {
                return this.VAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VAddressField, value) != true)) {
                    this.VAddressField = value;
                    this.RaisePropertyChanged("VAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VCapacity {
            get {
                return this.VCapacityField;
            }
            set {
                if ((this.VCapacityField.Equals(value) != true)) {
                    this.VCapacityField = value;
                    this.RaisePropertyChanged("VCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VId {
            get {
                return this.VIdField;
            }
            set {
                if ((this.VIdField.Equals(value) != true)) {
                    this.VIdField = value;
                    this.RaisePropertyChanged("VId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VManager {
            get {
                return this.VManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.VManagerField, value) != true)) {
                    this.VManagerField = value;
                    this.RaisePropertyChanged("VManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VName {
            get {
                return this.VNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VNameField, value) != true)) {
                    this.VNameField = value;
                    this.RaisePropertyChanged("VName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VPhone {
            get {
                return this.VPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VPhoneField, value) != true)) {
                    this.VPhoneField = value;
                    this.RaisePropertyChanged("VPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference4.IVenueService")]
    public interface IVenueService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/AddVenue", ReplyAction="http://tempuri.org/IVenueService/AddVenueResponse")]
        void AddVenue(Client.ServiceReference4.Venue venueDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/AddVenue", ReplyAction="http://tempuri.org/IVenueService/AddVenueResponse")]
        System.Threading.Tasks.Task AddVenueAsync(Client.ServiceReference4.Venue venueDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/UpdateVenue", ReplyAction="http://tempuri.org/IVenueService/UpdateVenueResponse")]
        void UpdateVenue(Client.ServiceReference4.Venue venueDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/UpdateVenue", ReplyAction="http://tempuri.org/IVenueService/UpdateVenueResponse")]
        System.Threading.Tasks.Task UpdateVenueAsync(Client.ServiceReference4.Venue venueDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/DeleteVenue", ReplyAction="http://tempuri.org/IVenueService/DeleteVenueResponse")]
        void DeleteVenue(int venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/DeleteVenue", ReplyAction="http://tempuri.org/IVenueService/DeleteVenueResponse")]
        System.Threading.Tasks.Task DeleteVenueAsync(int venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/GetAllVenues", ReplyAction="http://tempuri.org/IVenueService/GetAllVenuesResponse")]
        Client.ServiceReference4.Venue[] GetAllVenues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/GetAllVenues", ReplyAction="http://tempuri.org/IVenueService/GetAllVenuesResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference4.Venue[]> GetAllVenuesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVenueServiceChannel : Client.ServiceReference4.IVenueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VenueServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference4.IVenueService>, Client.ServiceReference4.IVenueService {
        
        public VenueServiceClient() {
        }
        
        public VenueServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VenueServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VenueServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VenueServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddVenue(Client.ServiceReference4.Venue venueDetails) {
            base.Channel.AddVenue(venueDetails);
        }
        
        public System.Threading.Tasks.Task AddVenueAsync(Client.ServiceReference4.Venue venueDetails) {
            return base.Channel.AddVenueAsync(venueDetails);
        }
        
        public void UpdateVenue(Client.ServiceReference4.Venue venueDetails) {
            base.Channel.UpdateVenue(venueDetails);
        }
        
        public System.Threading.Tasks.Task UpdateVenueAsync(Client.ServiceReference4.Venue venueDetails) {
            return base.Channel.UpdateVenueAsync(venueDetails);
        }
        
        public void DeleteVenue(int venueId) {
            base.Channel.DeleteVenue(venueId);
        }
        
        public System.Threading.Tasks.Task DeleteVenueAsync(int venueId) {
            return base.Channel.DeleteVenueAsync(venueId);
        }
        
        public Client.ServiceReference4.Venue[] GetAllVenues() {
            return base.Channel.GetAllVenues();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference4.Venue[]> GetAllVenuesAsync() {
            return base.Channel.GetAllVenuesAsync();
        }
    }
}
