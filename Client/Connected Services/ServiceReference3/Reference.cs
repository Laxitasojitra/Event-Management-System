//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/EventManagementSystem")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FbNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HospitalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PunctualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VenueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvId {
            get {
                return this.EvIdField;
            }
            set {
                if ((this.EvIdField.Equals(value) != true)) {
                    this.EvIdField = value;
                    this.RaisePropertyChanged("EvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvName {
            get {
                return this.EvNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EvNameField, value) != true)) {
                    this.EvNameField = value;
                    this.RaisePropertyChanged("EvName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FbNum {
            get {
                return this.FbNumField;
            }
            set {
                if ((this.FbNumField.Equals(value) != true)) {
                    this.FbNumField = value;
                    this.RaisePropertyChanged("FbNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hospitality {
            get {
                return this.HospitalityField;
            }
            set {
                if ((this.HospitalityField.Equals(value) != true)) {
                    this.HospitalityField = value;
                    this.RaisePropertyChanged("Hospitality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Overall {
            get {
                return this.OverallField;
            }
            set {
                if ((this.OverallField.Equals(value) != true)) {
                    this.OverallField = value;
                    this.RaisePropertyChanged("Overall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Punctuality {
            get {
                return this.PunctualityField;
            }
            set {
                if ((this.PunctualityField.Equals(value) != true)) {
                    this.PunctualityField = value;
                    this.RaisePropertyChanged("Punctuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Venue {
            get {
                return this.VenueField;
            }
            set {
                if ((this.VenueField.Equals(value) != true)) {
                    this.VenueField = value;
                    this.RaisePropertyChanged("Venue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IFeedbackService")]
    public interface IFeedbackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        void AddFeedback(Client.ServiceReference3.Feedback feedbackDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        System.Threading.Tasks.Task AddFeedbackAsync(Client.ServiceReference3.Feedback feedbackDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteFeedbackResponse")]
        void DeleteFeedback(int feedbackNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteFeedbackResponse")]
        System.Threading.Tasks.Task DeleteFeedbackAsync(int feedbackNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetAllFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetAllFeedbacksResponse")]
        Client.ServiceReference3.Feedback[] GetAllFeedbacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetAllFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetAllFeedbacksResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference3.Feedback[]> GetAllFeedbacksAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedbackServiceChannel : Client.ServiceReference3.IFeedbackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbackServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference3.IFeedbackService>, Client.ServiceReference3.IFeedbackService {
        
        public FeedbackServiceClient() {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddFeedback(Client.ServiceReference3.Feedback feedbackDetails) {
            base.Channel.AddFeedback(feedbackDetails);
        }
        
        public System.Threading.Tasks.Task AddFeedbackAsync(Client.ServiceReference3.Feedback feedbackDetails) {
            return base.Channel.AddFeedbackAsync(feedbackDetails);
        }
        
        public void DeleteFeedback(int feedbackNumber) {
            base.Channel.DeleteFeedback(feedbackNumber);
        }
        
        public System.Threading.Tasks.Task DeleteFeedbackAsync(int feedbackNumber) {
            return base.Channel.DeleteFeedbackAsync(feedbackNumber);
        }
        
        public Client.ServiceReference3.Feedback[] GetAllFeedbacks() {
            return base.Channel.GetAllFeedbacks();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference3.Feedback[]> GetAllFeedbacksAsync() {
            return base.Channel.GetAllFeedbacksAsync();
        }
    }
}
